// Generated by CoffeeScript 1.6.2
(function() {
  var a, b, i, image, imageArray, imageArrayTag, _i, _ref;

  image = document.getElementById('image');

  imageArrayTag = document.getElementsByTagName('img');

  imageArray = [];

  tracker;

  timer;

  for (i = _i = 0, _ref = imageArrayTag.length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
    imageArray.push(imageArrayTag[i].src);
  }

  fadeIn()(function() {
    if (image.style.opacity >= 1) {
      return;
    }
    return image.style.opacity = parseFloat(image.style.opacity, 10) + 0.01;
  });

  next()(function() {
    var tracker, _j, _ref1;

    image.style.opacity = 0;
    for (i = _j = 0, _ref1 = imageArray.length; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
      if (image.src === imageArray[i]) {
        if (image.src === imageArray[imageArray.length - 1]) {
          tracker = imageArray[0];
        } else {
          tracker = imageArray[i + 1];
        }
      }
    }
    return image.src = tracker;
  });

  previous()(function() {
    var tracker, _j, _ref1;

    image.style.opacity = 0;
    for (i = _j = 0, _ref1 = imageArray.length; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {
      if (image.src === imageArray[0]) {
        if (image.src === imageArray[0]) {
          tracker = imageArray[imageArray.length(-1)];
        } else {
          tracker = imageArray[i - 1];
        }
      }
    }
    return image.src = tracker;
  });

  a = document.getElementById('next');

  b = document.getElementById('previous');

  a.onclick = function() {
    var timer;

    clearInterval(timer);
    timer = setInterval(fadeIn, 10);
    return next();
  };

  b.onclick = function() {
    var timer;

    clearInterval(timer);
    timer = setInterval(fadeIn, 10);
    return previous();
  };

}).call(this);
